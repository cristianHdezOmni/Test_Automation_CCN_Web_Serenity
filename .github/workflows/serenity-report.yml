# name: Serenity BDD Report

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Java 17
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'temurin'
#           java-version: '17'

#       - name: Run tests and generate Serenity JSON
#         run: >
#           npx cucumber-js --require-module ts-node/register --require src/support/world.ts --require src/support/hooks.ts --require src/StepDefinitions/**/*.ts src/Resource/features/**/*.feature --format @serenity-js/cucumber --format-options "{\"outputDirectory\": \"target/site/serenity\", \"specDirectory\": \"src/Resource/features\"}"
#         continue-on-error: true

#       - name: Generate Serenity BDD HTML report
#         run: npx serenity-bdd run

#       - name: Upload Serenity report artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: serenity-report
#           path: target/site/serenity

#       - name: Deploy Serenity Report to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./target/site/serenity


# ------------------------------------------------------------

# name: Run Tests - SerenityJS Report

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# env:
#   REPORT_DIR: "./target/site/serenity"

# jobs:
#   test:
#     name: "🧪 Pruebas (Run Tests)"
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🧩 Checkout code
#         uses: actions/checkout@v4

#       - name: ⚙️ Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'

#       - name: 📦 Install dependencies
#         run: npm ci

#       - name: ☕ Install Java 17
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'temurin'
#           java-version: '17'

#       - name: 🧪 Run tests and generate Serenity JSON
#         run: >
#           npx cucumber-js
#           --require-module ts-node/register
#           --require src/support/world.ts
#           --require src/support/hooks.ts
#           --require src/StepDefinitions/**/*.ts
#           src/Resource/features/**/*.feature
#           --format @serenity-js/cucumber
#           --format-options "{\"outputDirectory\": \"$REPORT_DIR\", \"specDirectory\": \"src/Resource/features\"}"
#         continue-on-error: true

#       - name: 📤 Upload Serenity JSON artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: serenity-json
#           path: ${{ env.REPORT_DIR }}

#   generate_report:
#     name: "📊 Reporte (Generate Report)"
#     runs-on: ubuntu-latest
#     needs: test
#     steps:
#       - name: 🧩 Checkout code
#         uses: actions/checkout@v4

#       - name: 📥 Download Serenity JSON artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: serenity-json
#           path: ${{ env.REPORT_DIR }}

#       - name: ⚙️ Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'

#       - name: 📦 Install dependencies
#         run: npm ci

#       - name: ☕ Install Java 17
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'temurin'
#           java-version: '17'

#       - name: 🧮 Generate Serenity BDD HTML report
#         run: npx serenity-bdd run --destination $REPORT_DIR

#       - name: 📤 Upload Serenity report artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: serenity-report
#           path: ${{ env.REPORT_DIR }}

#   deploy_report:
#     name: "🚀 Deploy (GitHub Pages)"
#     runs-on: ubuntu-latest
#     needs: generate_report
#     steps:
#       - name: 📥 Download Serenity report artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: serenity-report
#           path: ${{ env.REPORT_DIR }}

#       - name: 🌐 Deploy Serenity Report to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ${{ env.REPORT_DIR }}



name: Run Tests - SerenityJS Report

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REPORT_DIR: "./target/site/serenity"

jobs:
  # ===========================================================
  # 🧪 JOB 1: Ejecuta pruebas en paralelo por TAG
  # ===========================================================
  run-parallel:
    name: "🧪 Pruebas (Run Tests) - tag ${{ matrix.tag }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tag: [ "@login", "@registration" ]  # Etiquetas que correrán en paralelo
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests by tag
        run: >
          npx cucumber-js
          --require-module ts-node/register
          --require src/support/world.ts
          --require src/support/hooks.ts
          --require src/StepDefinitions/**/*.ts
          src/Resource/features/**/*.feature
          --tags "${{ matrix.tag }}"
          --format @serenity-js/cucumber
          --format-options "{\"outputDirectory\": \"$REPORT_DIR\", \"specDirectory\": \"src/Resource/features\"}"
        continue-on-error: true

      - name: Upload Serenity JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: serenity-json-${{ matrix.tag }}
          path: ${{ env.REPORT_DIR }}

  # ===========================================================
  # 🧩 JOB 2: Ejecuta el último tag (@sanity) después de los anteriores
  # ===========================================================
  run-last:
    name: "🧩 Ejecutar tag final (@sanity)"
    runs-on: ubuntu-latest
    needs: run-parallel
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests for @sanity
        run: >
          npx cucumber-js
          --require-module ts-node/register
          --require src/support/world.ts
          --require src/support/hooks.ts
          --require src/StepDefinitions/**/*.ts
          src/Resource/features/**/*.feature
          --tags "@sanity"
          --format @serenity-js/cucumber
          --format-options "{\"outputDirectory\": \"$REPORT_DIR\", \"specDirectory\": \"src/Resource/features\"}"
        continue-on-error: true

      - name: Upload Serenity JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: serenity-json-sanity
          path: ${{ env.REPORT_DIR }}

  # ===========================================================
  # 📊 JOB 3: Generar reporte consolidado Serenity BDD
  # ===========================================================
  generate-report:
    name: "📊 Generar Reporte Consolidado"
    runs-on: ubuntu-latest
    needs: [run-parallel, run-last]
    steps:
      - name: 📥 Descargar todos los artifacts Serenity JSON
        uses: actions/download-artifact@v4
        with:
          path: ./downloads
        continue-on-error: true  # ✅ No falla si no hay artifacts aún

      - name: 📂 Listar archivos descargados
        run: |
          echo "📁 Listado de archivos descargados en ./downloads:"
          if [ -d "./downloads" ]; then
            ls -R ./downloads
          else
            echo "⚠️ No se encontró la carpeta ./downloads. Puede que los jobs previos no subieran artifacts."
          fi

      - name: 🔄 Fusionar todos los JSON de Serenity
        run: |
          mkdir -p merged
          if [ -d "./downloads" ]; then
            find ./downloads -type f -name "*.json" -exec cp {} merged/ \;
            echo "✅ Archivos JSON fusionados correctamente en ./merged"
          else
            echo "⚠️ No se encontraron archivos JSON para fusionar."
          fi

      - name: 🧩 Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Instalar dependencias
        run: npm ci

      - name: ☕ Instalar Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🧱 Generar reporte Serenity BDD consolidado
        run: |
          if [ "$(ls -A merged 2>/dev/null)" ]; then
            npx serenity-bdd run --source ./merged --destination $REPORT_DIR
            echo "✅ Reporte Serenity BDD generado en $REPORT_DIR"
          else
            echo "⚠️ No hay archivos JSON para generar el reporte Serenity."
          fi

      - name: 📤 Subir artefacto del reporte Serenity
        uses: actions/upload-artifact@v4
        with:
          name: serenity-report
          path: ${{ env.REPORT_DIR }}


  # ===========================================================
  # 🚀 JOB 4: Deploy del reporte a GitHub Pages
  # ===========================================================
  deploy-report:
    name: "🚀 Deploy Reporte Serenity BDD"
    runs-on: ubuntu-latest
    needs: generate-report
    steps:
      - name: Descargar artefacto del reporte
        uses: actions/download-artifact@v4
        with:
          name: serenity-report
          path: ${{ env.REPORT_DIR }}

      - name: Deploy Serenity Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.REPORT_DIR }}
